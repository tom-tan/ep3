#!/usr/bin/env ruby
require 'json'
require 'optparse'

if $0 == __FILE__
    opt = OptionParser.new
    opt.banner = "#{$0} [options] <response> <err> <tag> <interrupted>"

    opt.parse!(ARGV)
    unless ARGV.length == 4
        puts opt.help
        exit
    end

    resfile, errfile, tag, interrupted = *ARGV

    unless File.exist? resfile
        raise "File not found: #{resfile}"
    end
    res_str = open(resfile).read
    begin
        response = JSON.load(res_str)
        message = 'Failed to send metrics'
    rescue JSON::ParserError
        response = res_str
        message = 'Invalid response from metrics server'
    end

    unless File.exist? errfile
        raise "File not found: #{errfile}"
    end
    err = open(errfile).read

    level = if interrupted == 'true'
        'warning'
    else
        'error'
    end

    ret = {
        'log-level' => level,
        'interrupted' => interrupted == 'true',
        'tag' => tag,
        'message' => message,
        'response' => response,
        'stderr' => err,
        'metrics_server' => ENV['ES_HOST'],
        'metrics_port' => ENV['ES_PORT'],
    }

    puts JSON.dump(ret)
end

