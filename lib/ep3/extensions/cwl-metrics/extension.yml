id: cwl-metrics
hooks:
  - target: root
    operations:
      - type: replace-env
        env:
          - name: PATH
            value: $EP3_EXT_PATH/cwl-metrics/bin:~(self)
      # - type: insert-before
      #   target: workflow
      #   in:
      #     - replaced: cwl.input.json
      #       with: cwl.input.json_
      #   transitions:
      #     - name: start-telegraf
      #       type: shell
      #       in:
      #         - place: cwl.input.json
      #           pattern: _
      #       out:
      #         - place: telegraf-cid
      #           pattern: STDOUT
      #         - place: cwl.input.json_
      #           pattern: ~(cwl.input.json)
      #       command: docker run -rm -d ... telegraf -f telegraf.conf # TODO
      # - type: add-transitions
      #   on:
      #     exit:
      #       - name: stop-telegraf
      #         type: shell
      #         in:
      #           - place: telegraf-cid
      #             pattern: _
      #         command: | # TODO
      #           cid=$(cat ~(tegegraf-cid))
      #           docker stop $cid
      #       - name: send-metrics
      #         type: shell
      #         in:
      #           - place: cwl.metrics.json
      #             pattern: _
      #         command: send-metrics ~(cwl.metrics.json) $ENDPOINT # TODO
      - type: add-out
        target: workflow
        out:
          - place: cwl.metrics.json
            port-to: cwl.metrics.json

  - target: workflow
    precondition: ./rejectSubWorkflows $target
    operations:
      - type: replace-env
        env:
          - name: PATH
            value: $EP3_EXT_PATH/cwl-metrics/bin:~(self)
      - type: insert-before
        target: dup-entrypoint
        in:
          - replaced: entrypoint
            with: entrypoint_
        transitions:
          - name: metrics-init
            type: shell
            in:
              - place: entrypoint
                pattern: _
            out:
              - place: start_date
                pattern: FILE
              - place: metrics.input.json
                pattern: FILE
              - place: entrypoint_
                pattern: ~(entrypoint)
            command: |
              date +'%Y-%m-%d %H:%M:%S' > ~(start_date)
              cat ~(entrypoint) > ~(metrics.input.json)
      - type: add-out
        target: workflow
        out:
          - place: cwl.metrics.json
            pattern: _
      - type: add-out
        target: /^start-(.+)$/
        out:
          - place: cwl.metrics.json
            port-to: steps.~1.metrics.json_
      - type: add-transitions
        transitions:
          - name: add-~1-step-name
            type: shell
            in:
              - place: /^steps\.(.+)\.metrics\.json_/
                pattern: _
            out:
              - place: steps.~1.metrics.json
                pattern: STDOUT
            command: |
              jq '. + { stepname: "~1" }' ~0
          - name: generate-metrics
            type: shell
            in:
              - place: metrics.input.json
                pattern: _
              - place: cwl.output.json
                pattern: _
              - place: /^steps\..+\.metrics\.json$/g
                pattern: _
              - place: start_date
                pattern: _
            command: |
              start_date=$(cat ~(start_date))
              end_date=$(date +'%Y-%m-%d %H:%M:%S')
              step_metrics=$(echo "~@" | tr ' ' ',')
              ep3-log-generator --class=Workflow --cwl=job.cwl \
                --start="$start_date" --end="$end_date" \
                --input=~(metrics.input.json) --output=~(cwl.output.json) \
                --step-metrics=$step_metrics
            out:
              - place: cwl.output.json
                pattern: ~(cwl.output.json)
              - place: cwl.metrics.json
                pattern: STDOUT

  - target: tool
    precondition: ./requireContainer $target
    operations:
      - type: replace-env
        env:
          - name: PATH
            value: $EP3_EXT_PATH/cwl-metrics/bin:~(self)
          - name: EP3_PID
            value: $EP3_PID
      - type: replace-transition
        target: execute
        transition:
          type: shell
          in:
            - place: CommandGeneration
              pattern: success
            - place: CommandGeneration.command
              pattern: _
            - place: Execution
              pattern: not-started
          out:
            - place: Execution.err
              pattern: STDERR
            - place: Execution.out
              pattern: STDOUT
            - place: Execution.return
              pattern: RETURN
            - place: cid
              pattern: FILE
          command: executor --cidfile=~(cid) ~(CommandGeneration.command)
      - type: insert-before
        target: prepare
        in:
          - replaced: entrypoint
            with: entrypoint_
        transitions:
          - name: start-metrics
            type: shell
            in:
              - place: entrypoint
                pattern: _
            out:
              - place: start_date
                pattern: FILE
              - place: metrics.input.json
                pattern: FILE
              - place: entrypoint_
                pattern: ~(entrypoint)
            command: |
              date +'%Y-%m-%d %H:%M:%S' > ~(start_date)
              cat ~(entrypoint) > ~(metrics.input.json)
      - type: insert-before
        target: stage-out
        in:
          - replaced: cwl.input.json
            with: cwl.input.json_
        transitions:
          - name: collect-container-info
            type: shell
            in:
              - place: cwl.input.json
                pattern: _
              - place: cid
                pattern: _
            out:
              - place: metrics.runtime.json
                pattern: FILE
              - place: metrics.platform.json
                pattern: FILE
              - place: metrics.process.json
                pattern: FILE
              - place: cwl.input.json_
                pattern: ~(cwl.input.json)
              - place: cid
                pattern: ~(cid)
            command: |
              docker info --format '{{json .}}' | jq '{ running_containers: .ContainersRunning, server_version: .ServerVersion, storage_driver: .Driver, number_of_cpu: .NCPU, total_memory: .MemTotal }' > ~(metrics.runtime.json)
              cid=$(cat ~(cid))
              docker inspect $cid | jq "{ id: \"$cid\", image: .[0].Config.Image, cmd: .[0].Config.Cmd | join(\" \"), status: .[0].State.Status, start_time: .[0].State.StartedAt, end_time: .[0].State.FinishedAt, exit_code: .[0].State.ExitCode }" > ~(metrics.process.json)
              platform-info-collector > ~(metrics.platform.json)
      - type: add-transitions
        on:
          exit:
            - name: remove-container
              type: shell
              in:
                - place: cid
                  pattern: _
              command: |
                cid=$(cat ~(cid))
                docker rm $cid > /dev/null
        transitions:
          - name: generate-metrics
            type: shell
            in:
              - place: start_date
                pattern: _
              - place: metrics.input.json
                pattern: _
              - place: metrics.platform.json
                pattern: _
              - place: metrics.runtime.json
                pattern: _
              - place: metrics.process.json
                pattern: _
              - place: cwl.output.json
                pattern: _
            command: |
              start_date=$(cat ~(start_date))
              end_date=$(date +'%Y-%m-%d %H:%M:%S')
              ep3-log-generator --class=CommandLineTool --cwl=job.cwl \
                --start="$start_date" --end="$end_date" \
                --input=~(metrics.input.json) --output=~(cwl.output.json) \
                --platform=~(metrics.platform.json) \
                --runtime=~(metrics.runtime.json) \
                --process=~(metrics.process.json)
            out:
              - place: cwl.output.json
                pattern: ~(cwl.output.json)
              - place: cwl.metrics.json
                pattern: STDOUT
      - type: add-out
        target: command-line-tool
        out:
          - place: cwl.metrics.json
            pattern: _

  - target: expression
    precondition: "false"
    operations: []
