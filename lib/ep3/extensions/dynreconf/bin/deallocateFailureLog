#!/usr/bin/env ruby
require 'json'
require 'optparse'

if $0 == __FILE__
    opt = OptionParser.new
    opt.banner = "#{$0} [options] <out> <err> <code> <tag>"

    opt.parse!(ARGV)
    unless ARGV.length == 4
        puts opt.help
        exit
    end

    outfile, errfile, code, tag = *ARGV

    unless File.exist? outfile
        raise "File not found: #{outfile}"
    end
    out = open(outfile).read

    unless File.exist? errfile
        raise "File not found: #{errfile}"
    end
    err = open(errfile) do |f|
        str = f.read
        begin
            JSON.load(str)
        rescue JSON::ParserError
            {
                message: "Unknown error",
                payload: str,
            }
        end
    end

    ret = {
        'log-level' => 'error',
        'interrupted' => false,
        'tag' => tag,
        'message' => "Failed to send a deallocate request for #{tag.split('.')[2..-1].join('.')}",
        'stdout' => out,
        'stderr' => err,
        'return' => code.to_i,
    }

    puts JSON.dump(ret)
end
